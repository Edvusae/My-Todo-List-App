/* styles/components.css */

/* --- Task Input Area --- */
.todo-form {
    display: flex; /* Arrange inputs and add button horizontally */
    gap: var(--spacing-sm); /* Space between elements */
    margin-bottom: var(--spacing-xl);
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
}

.todo-form input[type="text"],
.todo-form input[type="number"] {
    flex-grow: 1; /* Inputs take available space */
    padding: var(--spacing-sm) var(--spacing-md);
    border: 1px solid var(--light-gray);
    border-radius: var(--border-radius-sm);
    font-size: 1rem;
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    min-width: 120px; /* Ensure inputs don't become too small */
}

.todo-form input:focus {
    outline: none;
    border-color: var(--primary-blue);
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Subtle blue glow */
}

.btn {
    padding: var(--spacing-sm) var(--spacing-md);
    border: none;
    border-radius: var(--border-radius-sm);
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    white-space: nowrap; /* Prevent button text from wrapping */
}

.btn-primary {
    background-color: var(--primary-blue);
    color: var(--light-text);
}

.btn-primary:hover {
    background-color: #0056b3; /* Darker blue on hover */
    box-shadow: var(--box-shadow-sm);
}

.btn-danger {
    background-color: var(--primary-red);
    color: var(--light-text);
}

.btn-danger:hover {
    background-color: #bd2130; /* Darker red on hover */
    box-shadow: var(--box-shadow-sm);
}

/* Style for the "Clear Completed" button if it's separate */
.clear-completed-btn-container {
    text-align: right; /* Align to the right */
    margin-top: var(--spacing-md);
}

/* --- Task List Items --- */
/* styles/components.css */

/* --- Task List --- */
.todo-list {
    list-style: none; /* Remove default bullet points */
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm); /* Space between tasks */
}

.task-item {
    display: flex;
    align-items: center;
    background-color: var(--light-text); /* Slightly lighter background for tasks */
    padding: var(--spacing-md);
    border-radius: var(--border-radius-sm);
    box-shadow: var(--box-shadow-sm);
    transition: all 0.2s ease-in-out;
    position: relative; /* For drag-and-drop styling */
    border: 1px solid transparent; /* For highlighting */
}

.task-item:hover {
    box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.1); /* Lift effect on hover */
    transform: translateY(-2px);
    border-color: var(--primary-blue); /* Subtle highlight */
}

/* Drag-and-drop feedback */
.task-item.dragging {
    opacity: 0.5;
    border: 2px dashed var(--primary-blue);
    background-color: var(--light-gray);
}


.task-checkbox-container {
    position: relative;
    display: inline-block;
    margin-right: var(--spacing-md);
    cursor: pointer;
}

.task-checkbox-container input[type="checkbox"] {
    /* Hide the default checkbox */
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.checkmark {
    height: 20px;
    width: 20px;
    background-color: var(--light-gray);
    border: 1px solid var(--secondary-gray);
    border-radius: var(--border-radius-sm);
    display: inline-block;
    transition: all 0.2s ease-in-out;
}

/* On hover, add a light background color */
.task-checkbox-container:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.task-checkbox-container input:checked ~ .checkmark {
    background-color: var(--primary-blue);
    border-color: var(--primary-blue);
}

/* Create the checkmark (indicator for checked state) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.task-checkbox-container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark */
.task-checkbox-container .checkmark:after {
    left: 7px;
    top: 3px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
}


.task-text {
    flex-grow: 1; /* Takes most of the space */
    margin-right: var(--spacing-md);
    font-size: 1.1rem;
    cursor: pointer; /* Indicates it's clickable for detail modal */
}

.task-item.completed .task-text {
    text-decoration: line-through;
    color: var(--secondary-gray);
    opacity: 0.7;
}

.task-timer-display {
    font-family: var(--font-primary);
    font-weight: 500;
    font-size: 0.9rem;
    color: var(--primary-blue);
    margin-right: var(--spacing-md);
    white-space: nowrap;
}

.task-actions {
    display: flex;
    gap: var(--spacing-sm);
}

.task-actions .btn {
    padding: var(--spacing-xs) var(--spacing-sm); /* Smaller buttons */
    font-size: 0.85rem;
    font-weight: 400;
}

.task-actions .btn-secondary { /* Example for other action buttons */
    background-color: var(--secondary-gray);
    color: var(--light-text);
}

.task-actions .btn-secondary:hover {
    background-color: #5a6268;
}

.task-actions .btn-success {
    background-color: var(--success-green);
    color: var(--light-text);
}
.task-actions .btn-success:hover {
    background-color: #218838;
}
.task-actions .btn-danger {
    background-color: var(--primary-red);
    color: var(--light-text);
}

.task-actions .btn-danger:hover {
    background-color: #bd2130;
}

/* styles/components.css */

/* --- Weather Widget --- */
.weather-widget {
    background: var(--card-bg);
    border-radius: var(--border-radius-md);
    box-shadow: var(--box-shadow-sm);
    padding: var(--spacing-md);
    margin-bottom: var(--spacing-xl);
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-sm);
    max-width: 300px; /* Smaller than todo list */
    margin-left: auto; /* Center or align as needed */
    margin-right: auto;
}

.weather-city {
    font-size: 1.2rem;
    font-weight: 500;
    margin-bottom: var(--spacing-xs);
}

.weather-icon {
    width: 60px; /* Adjust size of weather icon */
    height: 60px;
    object-fit: contain;
}

.weather-temp {
    font-size: 2rem;
    font-weight: 600;
    color: var(--primary-blue);
}

.weather-description {
    font-size: 0.9rem;
    color: var(--secondary-gray);
    text-transform: capitalize;
}

/* Optional: Loading state for weather */
.weather-loading {
    color: var(--secondary-gray);
    font-style: italic;
}

